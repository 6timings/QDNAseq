%\VignetteIndexEntry{An introduction to QDNAseq}

\documentclass{article}

\begin{document}

\title{Introduction to QDNAseq}
\author{Ilari Scheinin}
\maketitle

First load the package.

<<reg>>=
library(qdnaseq)
@

To load all the bam files in the current directory, run:

<<reg, echo=TRUE, eval=FALSE>>=
readCounts <- binReadCounts(bins)
# all files ending in .bam from the current working directory

# or

readCounts <- binReadCounts(bins, bamfiles='tumor.bam')
# file 'tumor.bam' from the current working directory

# or

readCounts <- binReadCounts(bins, path='tumors')
# all files ending in .bam from the subdirectory 'tumors'
@

For the purpose of this tutorial, we are loading up data for chromosome 9 of low grade glioma sample LGG150:

<<reg>>=
data(LGG150)
@

Perform correction for GC content and mappability.

<<reg>>=
LGG150 <- correctBins(LGG150)
@

Perform median normalization.

<<reg>>=
LGG150 <- normalizeBins(LGG150)
@

To apply filtering, plot the profile and highlight bins to be filtered out for evaluation. By default, bins with mappabilities lower than 50 and the 1000 Genomes residuals larger than 2 standard deviations are filtered out.

% png? https://stat.ethz.ch/pipermail/r-help/2009-November/218795.html

<<label=filters,include=FALSE>>=
plot(LGG150)
highlightFilters(LGG150, mappability=50, blacklist=0, residual=2, bases=0)
@

\begin{figure}
\begin{center}
<<label=fig1,fig=TRUE,echo=FALSE>>=
<<filters>>
@
\end{center}
\caption{A plot}
\label{fig:one}
\end{figure}

Apply filters.

<<reg>>=
LGG150 <- applyFilters(LGG150, mappability=50, blacklist=0, residual=2,
  bases=0)
@

Data now ready to be analyzed with a downstream package of choice. Segmentation with the CBS algorithm from DNAcopy and calling copy number aberrations with CGHcall have been implemented for convenience.

<<reg>>=
LGG150 <- segmentBins(LGG150)
@

Plot to evaluate segmentation.

<<label=segmentation,include=FALSE>>=
plot(LGG150)
@

\begin{figure}
\begin{center}
<<label=fig2,fig=TRUE,echo=FALSE>>=
<<segmentation>>
@
\end{center}
\caption{A plot}
\label{fig:two}
\end{figure}

Tune segmentation parameters and iterate until satisfied. Next, perform mode normalization and call aberrations, and plot the final results.

<<reg>>=
LGG150 <- callBins(LGG150)
@

<<label=calls,include=FALSE>>=
plot(LGG150)
@

\begin{figure}
\begin{center}
<<label=fig3,fig=TRUE,echo=FALSE>>=
<<calls>>
@
\end{center}
\caption{A plot}
\label{fig:three}
\end{figure}

\end{document}

Finally, for other downstream analyses, such as running CGHregions, it might be useful to convert to a cghCall object.

<<reg>>=
cgh <- makeCgh(LGG150)
@

% EOF
